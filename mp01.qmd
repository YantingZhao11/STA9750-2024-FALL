---
title: "Mini-Project #01 Yanting Zhao"
---
```{r echo=FALSE, message=FALSE}
# Load necessary libraries
if(!require("tidyverse")) install.packages("tidyverse")
library(tidyverse)
library(readxl)

# Fare revenue file path
fare_revenue_file <- "C:\\Users\\w3038\\Downloads\\2022_fare_revenue.xlsx"

# Load fare revenue data
FARES <- readxl::read_xlsx(fare_revenue_file) |>
    select(-`State/Parent NTD ID`, 
           -`Reporter Type`,
           -`Reporting Module`,
           -`TOS`,
           -`Passenger Paid Fares`,
           -`Organization Paid Fares`) |>
    filter(`Expense Type` == "Funds Earned During Period") |>
    select(-`Expense Type`)

# Expenses file path
expenses_file <- "C:\\Users\\w3038\\Downloads\\2022_expenses.csv"

# Load expenses data
EXPENSES <- readr::read_csv(expenses_file) |>
    select(`NTD ID`, 
           `Agency`,
           `Total`, 
           `Mode`) |>
    mutate(`NTD ID` = as.integer(`NTD ID`)) |>
    rename(Expenses = Total) |>
    group_by(`NTD ID`, `Mode`) |>
    summarize(Expenses = sum(Expenses)) |>
    ungroup()

# Join fares and expenses data
FINANCIALS <- inner_join(FARES, EXPENSES, by = c("NTD ID", "Mode"))|>
   mutate(`Mode` = case_when(
        `Mode` == "HR" ~ "Heavy Rail", 
        `Mode` == "LR" ~ "Light Rail",
        `Mode` == "MB" ~ "Motorbus",
        `Mode` == "TB" ~ "Trolleybus",
        `Mode` == "CR" ~ "Commuter Rail",
        `Mode` == "DR" ~ "Demand Response",
        TRUE ~ "Unknown"
    ))


# Monthly Transit Numbers
library(tidyverse)

# Expenses file path
ridership_file <- "C:\\Users\\w3038\\Downloads\\ridership.xlsx"

# Load Trips data (UPT)
TRIPS <- readxl::read_xlsx(ridership_file, sheet="UPT") |>
    filter(`Mode/Type of Service Status` == "Active") |>
    select(-`Legacy NTD ID`, 
           -`Reporter Type`, 
           -`Mode/Type of Service Status`, 
           -`UACE CD`, 
           -`TOS`) |>
    pivot_longer(-c(`NTD ID`:`3 Mode`), 
                 names_to="month", 
                 values_to="UPT") |>
    drop_na() |>
    mutate(month = my(month))  # Parse month-year date specs using lubridate

# Load Miles data (VRM)
MILES <- readxl::read_xlsx(ridership_file, sheet="VRM") |>
    filter(`Mode/Type of Service Status` == "Active") |>
    select(-`Legacy NTD ID`, 
           -`Reporter Type`, 
           -`Mode/Type of Service Status`, 
           -`UACE CD`, 
           -`TOS`) |>
    pivot_longer(-c(`NTD ID`:`3 Mode`), 
                 names_to="month", 
                 values_to="VRM") |>
    drop_na() |>
    group_by(`NTD ID`, `Agency`, `UZA Name`, `Mode`, `3 Mode`, month) |>
    summarize(VRM = sum(VRM)) |>
    ungroup() |>
    mutate(month = my(month))  # Parse month-year date specs using lubridate

# Join Trips and Miles data
USAGE <- inner_join(TRIPS, MILES, by = c("NTD ID", "Agency", "UZA Name", "Mode", "3 Mode", "month")) |>
  mutate(`NTD ID` = as.integer(`NTD ID`)) |>
  rename(metro_area = 'UZA Name') |>  #task1
  mutate(`Mode` = case_when(
        `Mode` == "HR" ~ "Heavy Rail", 
        `Mode` == "LR" ~ "Light Rail",
        `Mode` == "MB" ~ "Motorbus",
        `Mode` == "TB" ~ "Trolleybus",
        `Mode` == "CR" ~ "Commuter Rail",
        `Mode` == "DR" ~ "Demand Response",
        TRUE ~ "Unknown"
    )) #task2

unique_modes <- USAGE |> 
  distinct(`Mode`)

# Check the first few rows to ensure it worked correctly
head(USAGE)


if(!require("DT")) install.packages("DT")
library(DT)

sample_n(USAGE, 1000) |> 
    mutate(month=as.character(month)) |> 
    DT::datatable()

#3.1What transit agency had the most total VRM in this sample?
USAGE %>%
  drop_na() %>%
  group_by(Agency) %>%
  summarize(total_VRM = sum(VRM, na.rm=TRUE)) %>%
  arrange(desc(total_VRM))%>%
  slice(1)

#3.2What transit mode had the most total VRM in this sample?
USAGE %>%
  drop_na() %>%
  group_by(Mode) %>%
  summarize(total_VRM = sum(VRM, na.rm=TRUE)) %>%
  arrange(desc(total_VRM))%>%
  slice(1)

#3.3How many trips were taken on the NYC Subway (Heavy Rail) in May 2024?

library(lubridate)  # Ensure lubridate is loaded for date parsing

# Filter for Heavy Rail in NYC for May 2024
NYC_Subway_trip_may_24 <- USAGE %>%
  mutate(month = format(ymd(month), "%Y-%m")) %>%  # Convert to yyyy-mm format
  filter(Mode == "Heavy Rail", 
         metro_area == "New York, NY",  # Ensure it's NYC Subway
         month == "2024-05") %>%  # Filter for May 2024
  summarize(total_trip = sum(UPT, na.rm = TRUE))  # Sum the trips (UPT)

NYC_Subway_trip_may_24

#3.4What mode of transport had the longest average trip in May 2024?
longest_avg_trip <- USAGE %>%
  group_by(Mode) %>%
  summarize(total_VRM = sum(VRM, na.rm = TRUE), 
            total_UPT = sum(UPT, na.rm = TRUE)) %>%  
  mutate(avg_trip_length = total_VRM / total_UPT) %>%  
  arrange(desc(avg_trip_length)) %>%  
  slice(1)  

longest_avg_trip

#3.5How much did NYC subway ridership fall between April 2019 and April 2020?

#4Find three more interesting transit facts in this data other than those above.
#4.1 What transit agency had the least total VRM in this sample?
USAGE %>%
  drop_na() %>%
  group_by(Agency) %>%
  summarize(total_VRM = sum(VRM, na.rm=TRUE)) %>%
  arrange(total_VRM)%>%
  slice(1)

#4.2What transit mode had the least total VRM in this sample?
USAGE %>%
  drop_na() %>%
  group_by(Mode) %>%
  summarize(total_VRM = sum(VRM, na.rm=TRUE)) %>%
  arrange(total_VRM)%>%
  slice(1)

#4.3What transit agency had the least total UPT in this sample?
USAGE %>%
  drop_na() %>%
  group_by(Agency) %>%
  summarize(total_UPT = sum(UPT, na.rm=TRUE)) %>%
  arrange(total_UPT)%>%
  slice(1)

#5
USAGE_2022_ANNUAL <- USAGE %>%
  filter(year(month) == 2022) %>%             # Filter for the year 2022
  group_by(`NTD ID`, Agency, metro_area, Mode) %>%
  summarize(UPT = sum(UPT, na.rm = TRUE),   
            VRM = sum(VRM, na.rm = TRUE), .groups = 'drop') %>%  
  ungroup()  # Ungroup the data after summarizing

# View the result
USAGE_2022_ANNUAL

#merge table together
USAGE_AND_FINANCIALS <- left_join(USAGE_2022_ANNUAL, 
           FINANCIALS, 
           join_by(`NTD ID`, Mode)) |>
    drop_na()

USAGE_AND_FINANCIALS

```


---
title: "Transit System Analysis Report"
---

This project focuses on analyzing farebox recovery, the fraction of transit revenue generated from fares, using data from the National Transit Database (NTD). The analysis examines key metrics, including farebox revenues, operating expenses, ridership (total number of trips), and vehicle miles traveled (VMT). Given the disruptions caused by the COVID-19 pandemic, the data reflects some post-pandemic irregularities. For consistency, we utilize 2022 data across all categories, recognizing the lag in reporting. The goal is not to make long-term forecasts but to gain insights into the performance and financial sustainability of various transit agencies.\


## Total Vehicle Revenue Miles (VRM) by Transit Agency
In this sample, the transit agency with the most total Vehicle Revenue Miles (VRM) was the Aerial Tramway service, which reported a total of 292,860 VRM. This highlights the prominence of this specific agency in terms of operational miles.\

## Total Vehicle Revenue Miles (VRM) by Transit Mode
When analyzing the data by transit mode, the Motorbus mode had the most significant operational miles, with a total of 49,444,494,088 VRM. This indicates that Motorbuses are the most utilized form of transportation in terms of distance covered.\

## NYC Subway Ridership in May 2024
For the month of May 2024, a total of 180,458,819 trips were taken on the New York City Subway (Heavy Rail). This figure represents the scale of ridership in one of the largest transit systems in the U.S. during that period.\

## NYC Subway Ridership Decline from April 2019 to April 2020
During the COVID-19 pandemic, NYC subway ridership fell dramatically between April 2019 and April 2020. The decline in total UPT was 261,525,797 trips, showcasing the severe impact of the pandemic on public transit systems.\

## Additional Transit Insights
* Agency with the Least Total VRM: The Barnegat Bay Decoy & Baymen's Museum had the least total VRM in this sample, reporting only 2,312 VRM. This suggests minimal operational activity for this agency.

* Mode with the Least Total VRM: The Aerial Tramway mode had the least VRM among transit modes, with a total of 292,860 VRM, highlighting its smaller operational footprint compared to other modes.

* Agency with the Least Total UPT: Enterprise Holdings, LLC had the fewest total Unlinked Passenger Trips, with only 858 trips in the dataset. This reflects the lower passenger activity of this particular agency.\

To deepen the analysis of transit data, a new table was constructed from the USAGE dataset, focusing on the total Unlinked Passenger Trips (UPT) and Vehicle Revenue Miles (VRM) for 2022. This involved utilizing R functions like group_by, summarize, and filter, along with the year function to isolate data for 2022. The final table, named USAGE_2022_ANNUAL, included the key fields: NTD ID, Agency, Metro Area, Mode, UPT, and VRM. After summarizing the data, the table was ungrouped for further manipulation.\

This new table was then merged with the FINANCIALS dataset using a left join, matched by NTD ID and Mode. The merge allowed for a comprehensive view of both operational usage and financial data, creating the USAGE_AND_FINANCIALS dataset, which was used to investigate farebox recovery and efficiency across transit systems.\

Several key questions were addressed using this enriched dataset:

1. **Most UPT in 2022**: The New York City Subway (Heavy Rail) operated by the MTA had the highest UPT in 2022, with an impressive 1.79 billion trips. The system also reported 338 million VRM and collected over $2.32 billion in fares, making it the largest transit system by ridership.

2. **Highest Farebox Recovery Ratio**: The Transit Authority in Elizabeth, NJ (Vanpool) achieved the highest farebox recovery rate, defined by the highest ratio of total fares to expenses. Despite its small size, with 9,640 UPT and 94,027 VRM, it collected $97,300 in fares, demonstrating efficient cost recovery.

3. **Lowest Expenses per UPT**: The North Carolina Motorbus system, based in Raleigh, had the lowest expenses per UPT. With 2.31 million UPT and 531,555 VRM, it operated at low costs, although it reported zero fares, reflecting heavy subsidy reliance or a fare-free model.

4. **Highest Fares per UPT**: The Altoona Metro Transit (Demand Response) in Altoona, PA, had the highest total fares per UPT, despite its very small scale. With just 26 trips, it managed to collect $17,058 in fares, indicating a significant fare collection per passenger trip.

5. **Lowest Expenses per VRM**: The New Mexico Department of Transportation’s Vanpool service in Las Cruces reported the lowest expenses per VRM, with 118,780 UPT and 1.75 million VRM, making it highly cost-efficient. It also generated $757,574 in total fares, showing a good balance between service provision and cost control.

6. **Highest Fares per VRM**: Chicago Water Taxi (Ferryboat) was the most efficient in terms of total fares per VRM, with 16,936 UPT and 600 VRM, generating $142,473 in fares. This highlights the high fare collection relative to the distance traveled, particularly for specialized modes like ferryboats.\


## Conclusion
In conclusion, identifying the most efficient transit system depends on how efficiency is defined. The Transit Authority in Elizabeth, NJ, stood out in terms of farebox recovery, while the New Mexico Vanpool and Raleigh Motorbus services excelled in cost efficiency per mile and per trip, respectively. Efficiency can be viewed through various lenses—fare recovery, ridership, or operational costs—each providing a different perspective on transit system performance.\

## Codes








```{r echo=FALSE, message=FALSE}
# Load necessary libraries
suppressWarnings({
  # Load required packages
  if(!require("tidyverse")) install.packages("tidyverse")
  library(tidyverse)

  if(!require("knitr")) install.packages("knitr")
  if(!require("kableExtra")) install.packages("kableExtra")
  library(knitr)
  library(kableExtra)

  if(!require("lubridate")) install.packages("lubridate")
  library(lubridate)

  if(!require("readxl")) install.packages("readxl")
  library(readxl)
  
  if(!require("DT")) install.packages("DT")
library(DT)
})

# Fare revenue file path
fare_revenue_file <- "C:\\Users\\w3038\\Downloads\\2022_fare_revenue.xlsx"

# Load fare revenue data
FARES <- readxl::read_xlsx(fare_revenue_file) |>
    select(-`State/Parent NTD ID`, 
           -`Reporter Type`,
           -`Reporting Module`,
           -`TOS`,
           -`Passenger Paid Fares`,
           -`Organization Paid Fares`) |>
    filter(`Expense Type` == "Funds Earned During Period") |>
    select(-`Expense Type`)

# Expenses file path
expenses_file <- "C:\\Users\\w3038\\Downloads\\2022_expenses.csv"

# Load expenses data
EXPENSES <- readr::read_csv(expenses_file) |>
    select(`NTD ID`, 
           `Agency`,
           `Total`, 
           `Mode`) |>
    mutate(`NTD ID` = as.integer(`NTD ID`)) |>
    rename(Expenses = Total) |>
    group_by(`NTD ID`, `Mode`) |>
    summarize(Expenses = sum(Expenses)) |>
    ungroup()

# Join fares and expenses data
FINANCIALS <- inner_join(FARES, EXPENSES, by = c("NTD ID", "Mode"))|>
  mutate(`Mode` = case_when(
    `Mode` == "DR" ~ "Demand Response",
    `Mode` == "MB" ~ "Motorbus",
    `Mode` == "CR" ~ "Commuter Rail",
    `Mode` == "CC" ~ "Cable Car",
    `Mode` == "LR" ~ "Light Rail",
    `Mode` == "PB" ~ "Publico",
    `Mode` == "SR" ~ "Streetcar Rail",
    `Mode` == "VP" ~ "Vanpool",
    `Mode` == "CB" ~ "Commuter Bus",
    `Mode` == "TB" ~ "Trolleybus",
    `Mode` == "FB" ~ "Ferryboat",
    `Mode` == "TR" ~ "Aerial Tramway",
    `Mode` == "HR" ~ "Heavy Rail",
    `Mode` == "MG" ~ "Monorail/Automated Guideway",
    `Mode` == "RB" ~ "Bus Rapid Transit",
    `Mode` == "OR" ~ "Other Rail",
    `Mode` == "YR" ~ "Hybrid Rail",
    `Mode` == "AR" ~ "Alaska Railroad",
    `Mode` == "IP" ~ "Inclined Plane",
    TRUE ~ "Unknown"
  ))


# Expenses file path
ridership_file <- "C:\\Users\\w3038\\Downloads\\ridership.xlsx"

# Load Trips data (UPT)
TRIPS <- readxl::read_xlsx(ridership_file, sheet="UPT") |>
    filter(`Mode/Type of Service Status` == "Active") |>
    select(-`Legacy NTD ID`, 
           -`Reporter Type`, 
           -`Mode/Type of Service Status`, 
           -`UACE CD`, 
           -`TOS`) |>
    pivot_longer(-c(`NTD ID`:`3 Mode`), 
                 names_to="month", 
                 values_to="UPT") |>
    drop_na() |>
    mutate(month = my(month))  

# Load Miles data (VRM)
MILES <- readxl::read_xlsx(ridership_file, sheet="VRM") |>
    filter(`Mode/Type of Service Status` == "Active") |>
    select(-`Legacy NTD ID`, 
           -`Reporter Type`, 
           -`Mode/Type of Service Status`, 
           -`UACE CD`, 
           -`TOS`) |>
    pivot_longer(-c(`NTD ID`:`3 Mode`), 
                 names_to="month", 
                 values_to="VRM") |>
    drop_na() |>
    group_by(`NTD ID`, `Agency`, `UZA Name`, `Mode`, `3 Mode`, month) |>
    summarize(VRM = sum(VRM)) |>
    ungroup() |>
    mutate(month = my(month))  

# Join Trips and Miles data
cat("Usage Table:\n")

USAGE <- inner_join(TRIPS, MILES, by = c("NTD ID", "Agency", "UZA Name", "Mode", "3 Mode", "month")) |>
  mutate(`NTD ID` = as.integer(`NTD ID`)) |>
  rename(metro_area = 'UZA Name') |>  #task1
  mutate(`Mode` = case_when(
        `Mode` == "DR" ~ "Demand Response",
        `Mode` == "MB" ~ "Motorbus",
        `Mode` == "CR" ~ "Commuter Rail",
        `Mode` == "CC" ~ "Cable Car",
        `Mode` == "LR" ~ "Light Rail",
        `Mode` == "PB" ~ "Publico",
        `Mode` == "SR" ~ "Streetcar Rail",
        `Mode` == "VP" ~ "Vanpool",
        `Mode` == "CB" ~ "Commuter Bus",
        `Mode` == "TB" ~ "Trolleybus",
        `Mode` == "FB" ~ "Ferryboat",
        `Mode` == "TR" ~ "Aerial Tramway",
        `Mode` == "HR" ~ "Heavy Rail",
        `Mode` == "MG" ~ "Monorail/Automated Guideway",
        `Mode` == "RB" ~ "Bus Rapid Transit",
        `Mode` == "OR" ~ "Other Rail",
        `Mode` == "YR" ~ "Hybrid Rail",
        `Mode` == "AR" ~ "Alaska Railroad",
        `Mode` == "IP" ~ "Inclined Plane",
        TRUE ~ "Unknown"
    )) #task2

unique_modes <- USAGE |> 
  distinct(`Mode`)

head(USAGE)

sample_n(USAGE, 1000) |> 
    mutate(month=as.character(month)) |> 
    DT::datatable()

cat("3.1What transit agency had the most total VRM in this sample?\n")
#3.1What transit agency had the most total VRM in this sample?
USAGE %>%
  drop_na() %>%
  group_by(Agency) %>%
  summarize(total_VRM = sum(VRM, na.rm=TRUE)) %>%
  arrange(desc(total_VRM))%>%
  slice(1)

cat("3.2What transit mode had the most total VRM in this sample?\n")
#3.2What transit mode had the most total VRM in this sample?
USAGE %>%
  drop_na() %>%
  group_by(Mode) %>%
  summarize(total_VRM = sum(VRM, na.rm=TRUE)) %>%
  arrange(desc(total_VRM))%>%
  slice(1)


cat("3.3How many trips were taken on the NYC Subway (Heavy Rail) in May 2024?\n")
#3.3How many trips were taken on the NYC Subway (Heavy Rail) in May 2024?

# Filter for Heavy Rail in NYC for May 2024
NYC_Subway_trip_may_24 <- USAGE %>%
  mutate(month = format(ymd(month), "%Y-%m")) %>% 
  filter(Mode == "Heavy Rail", 
         Agency == "MTA New York City Transit",  
         month == "2024-05") %>%  
  summarize(total_trip = sum(UPT, na.rm = TRUE)) 

NYC_Subway_trip_may_24

cat("3.5How much did NYC subway ridership fall between April 2019 and April 2020?\n")
#3.5How much did NYC subway ridership fall between April 2019 and April 2020?
nyc_ridership_fall <- USAGE %>%
  mutate(month = format(ymd(month), "%Y-%m")) %>%  
  filter(Agency == "MTA New York City Transit", 
         month %in% c("2019-04", "2020-04")) %>%  
  group_by(month) %>%
  summarize(total_UPT = sum(UPT, na.rm = TRUE)) %>%
  arrange(month)

ridership_fall <- nyc_ridership_fall %>%
  summarize(fall = total_UPT[month == "2019-04"] - total_UPT[month == "2020-04"])

ridership_fall

cat("4.1 What transit agency had the least total VRM in this sample?\n")
#4Find three more interesting transit facts in this data other than those above.
#4.1 What transit agency had the least total VRM in this sample?
USAGE %>%
  drop_na() %>%
  group_by(Agency) %>%
  summarize(total_VRM = sum(VRM, na.rm=TRUE)) %>%
  arrange(total_VRM)%>%
  slice(1)

cat("4.2What transit mode had the least total VRM in this sample?\n")
#4.2What transit mode had the least total VRM in this sample?
USAGE %>%
  drop_na() %>%
  group_by(Mode) %>%
  summarize(total_VRM = sum(VRM, na.rm=TRUE)) %>%
  arrange(total_VRM)%>%
  slice(1)

cat("4.3What transit agency had the least total UPT in this sample?\n")
#4.3What transit agency had the least total UPT in this sample?
USAGE %>%
  drop_na() %>%
  group_by(Agency) %>%
  summarize(total_UPT = sum(UPT, na.rm=TRUE)) %>%
  arrange(total_UPT)%>%
  slice(1)

cat("Usage 2022 Annual:\n")
#5
USAGE_2022_ANNUAL <- USAGE %>%
  filter(year(month) == 2022) %>%            
  group_by(`NTD ID`, Agency, metro_area, Mode) %>%
  summarize(UPT = sum(UPT, na.rm = TRUE),   
            VRM = sum(VRM, na.rm = TRUE), .groups = 'drop') %>%  
  ungroup()  

# View the result
USAGE_2022_ANNUAL

cat("Usage and Financials: \n")
#merge table together
USAGE_AND_FINANCIALS <- left_join(USAGE_2022_ANNUAL, 
           FINANCIALS, 
           join_by(`NTD ID`, Mode)) |>
    drop_na()

USAGE_AND_FINANCIALS

cat("6.1Which transit system (agency and mode) had the most UPT in 2022? \n")
#6.1Which transit system (agency and mode) had the most UPT in 2022?
most_UPT_2022 <- USAGE_AND_FINANCIALS %>%
  arrange(desc(UPT)) %>%  
  slice_max(UPT, n = 1)   

most_UPT_2022

cat("6.2Which transit system (agency and mode) had the highest farebox recovery, defined as the highest ratio of Total Fares to Expenses? \n")
#6.2Which transit system (agency and mode) had the highest farebox recovery, defined as the highest ratio of Total Fares to Expenses?
# Calculate farebox recovery and find the transit system with the highest ratio
highest_farebox_recovery <- USAGE_AND_FINANCIALS %>%
  mutate(farebox_recovery = `Total Fares` / Expenses) %>% 
  arrange(desc(farebox_recovery)) %>%  
  slice_max(farebox_recovery, n = 1)

highest_farebox_recovery

cat("6.3Which transit system (agency and mode) has the lowest expenses per UPT? \n")
#6.3Which transit system (agency and mode) has the lowest expenses per UPT?
lowest_expenses_per_UPT <- USAGE_AND_FINANCIALS %>%
  mutate(expenses_per_UPT = Expenses / UPT) %>%  # 
  arrange(expenses_per_UPT) %>%  
  slice_min(expenses_per_UPT, n = 1) 

lowest_expenses_per_UPT

cat("6.4Which transit system (agency and mode) has the highest total fares per UPT? \n")
#6.4Which transit system (agency and mode) has the highest total fares per UPT?
highest_fares_per_UPT <- USAGE_AND_FINANCIALS %>%
  mutate(fares_per_UPT = `Total Fares` / UPT)  %>%  
  arrange(desc(fares_per_UPT)) %>%  
  slice_max(fares_per_UPT, n = 1) 

highest_fares_per_UPT

cat("6.5Which transit system (agency and mode) has the lowest expenses per VRM? \n")
#6.5Which transit system (agency and mode) has the lowest expenses per VRM?
lowest_expense_per_VRM <- USAGE_AND_FINANCIALS %>%
  mutate(expense_per_VRM = Expenses / VRM)  %>%  
  arrange(expense_per_VRM) %>%  
  slice_min(expense_per_VRM, n = 1) 

lowest_expense_per_VRM

cat("6.6Which transit system (agency and mode) has the highest total fares per VRM? \n")
#6.6Which transit system (agency and mode) has the highest total fares per VRM?

highest_fares_per_VRM <- USAGE_AND_FINANCIALS %>%
  mutate(fares_per_VRM = `Total Fares` / VRM)  %>%  
  arrange(desc(fares_per_VRM)) %>%  
  slice_max(fares_per_VRM, n = 1) 

highest_fares_per_VRM
```

